{"version":3,"sources":["components/Dice/Dice.js","components/Button/Button.js","components/Player/Player.js","components/Game.js","components/Input/Input.js","index.js"],"names":["Dice","state","dice1","dice2","getRandomNumber","min","Math","ceil","max","floor","random","num1","this","num2","setState","setTimeout","props","onRender","className","React","Component","Button","disabled","disableButton","onClick","currentScore","name","icon","text","Player","checkWinnerOrCurrent","winner","player","toLowerCase","currentPlayer","playerName","totalScore","Game","winningScore","currentPlayerTurn","rollDice","player1","player1name","player2","player2name","setWinningScore","num","checkIfWinner","a","localStorage","getItem","winners","push","counter","setItem","JSON","stringify","data","parse","current","find","console","log","switchTurn","updateCurrentScore","newGame","replace","Input","handleClick","e","target","previousElementSibling","value","type","id","defaultValue","Start","start","settings","leaderboard","showButtons","showLeaderboard","sort","b","map","showSettings","clear","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f4c3d598.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./dice.css\";\n\nclass Dice extends React.Component {\n  state = {\n    dice1: 0,\n    dice2: 0,\n  };\n\n  getRandomNumber = () => {\n    const min = Math.ceil(1);\n    const max = Math.floor(6);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  componentDidMount() {\n    const num1 = this.getRandomNumber();\n    const num2 = this.getRandomNumber();\n    this.setState({ dice1: num1, dice2: num2 });\n    setTimeout(() => this.props.onRender(num1+num2), 550);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={`top-dice dice dice${this.state.dice1}`}>\n        </div>\n        <div className={`bottom-dice dice dice${this.state.dice2}`}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dice;","import React from \"react\";\nimport \"./button.css\";\n\nclass Button extends React.Component {\n  state = {disabled: false};\n  disableButton = () => {\n    this.setState({disabled: true});\n    this.props.onClick();\n    setTimeout(() => this.setState({ disabled: false }),1000);\n  }\n\n  render() {\n    return (\n      <button\n        disabled={this.props.currentScore === 0 || this.state.disabled}\n        className='btn'\n        onClick={this.disableButton}\n      >\n        <ion-icon name={this.props.icon}></ion-icon>\n        {this.props.text}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./player.css\";\n\nclass Player extends React.Component {\n\n  checkWinnerOrCurrent = () => {\n    if (this.props.winner === this.props.player.toLowerCase()) {\n      return \"player winner\";\n    } else if (this.props.currentPlayer === this.props.player.toLowerCase()) {\n      return \"player current\";\n    } else {\n      return \"player\";\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.checkWinnerOrCurrent()}>\n        <h1>{this.props.playerName}</h1>\n        <div className=\"totalScore\">\n          <h3>Total Score</h3>\n          <span>{this.props.totalScore}</span>\n        </div>\n        {this.props.currentPlayer === this.props.player.toLowerCase() &&\n          !(this.props.winner === this.props.player.toLowerCase()) && (\n            <div className=\"currentScore\">\n              <h3>Current Score</h3>\n              <span>{this.props.currentScore}</span>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Player;","import React from \"react\";\nimport Dice from \"./Dice/Dice\";\nimport Button from \"./Button/Button\";\n// import Input from \"./Input/Input\";\nimport Player from \"./Player/Player\";\nimport \"./game.css\";\n\nclass Game extends React.Component {\n  state = {\n    winningScore: this.props.winningScore,\n    currentPlayerTurn: \"player1\",\n    rollDice: false,\n    winner: null,\n    player1: {\n      name: this.props.player1name,\n      totalScore: 0,\n      currentScore: 0,\n    },\n\n    player2: {\n      name: this.props.player2name,\n      totalScore: 0,\n      currentScore: 0,\n    },\n  };\n\n  setWinningScore = (num) => this.setState({ winningScore: num });\n\n  checkIfWinner = async () => {\n    const player = this.state[this.state.currentPlayerTurn];\n    if (player.totalScore + player.currentScore >= this.state.winningScore) {\n      await this.setState({ winner: this.state.currentPlayerTurn, rollDice: false });\n      const winner = this.state[this.state.winner].name;\n      if (localStorage.getItem('winnings') === null) {\n        const winners = [];\n        winners.push({name: winner, counter: 1});\n        localStorage.setItem('winnings',JSON.stringify(winners));\n      } else {\n        const data = JSON.parse(localStorage.getItem(\"winnings\"));\n        const current = data.find((winner) => this.state[this.state.winner].name === winner.name);\n        if (current) {\n          current.counter++;\n          console.log(current);\n        } else {\n          const winner = {name: this.state[this.state.winner].name, counter: 1};\n          data.push(winner);\n        }\n        localStorage.setItem('winnings',JSON.stringify(data));\n      }\n    }\n    this.switchTurn();\n  };\n\n  updateCurrentScore = async (num) => {\n    const player = this.state.currentPlayerTurn;\n    const currentScore = this.state[player].currentScore;\n    if (num !== 12) {\n      await this.setState({\n        [player]: {\n          name: this.props[`${player}name`],\n          currentScore: num + currentScore,\n          totalScore: this.state[player].totalScore,\n        },\n      });\n    } else {\n      await this.setState({\n        [player]: {\n          name: this.props[`${player}name`],\n          currentScore: 0,\n          totalScore: this.state[player].totalScore,\n        },\n      });\n      this.checkIfWinner();\n    }\n  };\n\n  switchTurn = async () => {\n    const player = this.state.currentPlayerTurn;\n    await this.setState({ rollDice: false });\n    await this.setState({\n      [player]: {\n        currentScore: 0,\n        totalScore:\n          this.state[player].totalScore + this.state[player].currentScore,\n      },\n    });\n    if (this.state.winner === null) {\n      if (this.state.currentPlayerTurn === \"player1\") {\n        await this.setState({ currentPlayerTurn: \"player2\" });\n      } else {\n        await this.setState({ currentPlayerTurn: \"player1\" });\n      }\n    }\n  };\n\n  rollDice = async () => {\n    (await this.state.rollDice)\n      ? this.setState({ rollDice: false })\n      : this.setState({ rollDice: true });\n    if (!this.state.rollDice) {\n      setTimeout(() => {\n        this.setState({ rollDice: true });\n      }, 100);\n    }\n  };\n\n  newGame = () => {\n    this.setState({\n      winningScore: this.state.winningScore,\n      currentPlayerTurn: \"player1\",\n      rollDice: false,\n      winner: null,\n      player1: {\n        totalScore: 0,\n        currentScore: 0,\n      },\n      player2: {\n        totalScore: 0,\n        currentScore: 0,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"gameboard\">\n        <Player\n          player=\"player1\"\n          playerName={this.props.player1name.replace(\" \", \"\")}\n          currentPlayer={this.state.currentPlayerTurn}\n          winner={this.state.winner}\n          totalScore={this.state.player1.totalScore}\n          currentScore={this.state.player1.currentScore}\n        />\n        <Player\n          player=\"player2\"\n          playerName={this.props.player2name.replace(\" \", \"\")}\n          currentPlayer={this.state.currentPlayerTurn}\n          winner={this.state.winner}\n          totalScore={this.state.player2.totalScore}\n          currentScore={this.state.player2.currentScore}\n        />\n        {!this.state.winner && (\n          <div className={`control ${this.state.currentPlayerTurn}`}>\n            <Button\n              onClick={this.rollDice}\n              icon=\"dice-sharp\"\n              text=\"Roll Dice\"\n            />\n            <Button\n              onClick={this.checkIfWinner}\n              icon=\"swap-horizontal\"\n              text=\"Hold\"\n              currentScore={\n                this.state[this.state.currentPlayerTurn].currentScore\n              }\n            />\n          </div>\n        )}\n        <div className=\"new-game\">\n          <Button onClick={this.newGame} icon=\"refresh\" text=\"New Game\" />\n        </div>\n        {/* <Input onClick={this.setWinningScore} /> */}\n        <div className=\"dices\">\n          {this.state.rollDice && <Dice onRender={this.updateCurrentScore} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","import React from \"react\";\nimport \"./input.css\";\n\nclass Input extends React.Component {\n  state = {disabled: false};\n\n  handleClick = (e) => {\n    this.setState({ disabled: true });\n    this.props.onClick(e.target.previousElementSibling.value);\n  }\n  \n  render() {\n    return (\n      <div className=\"input\">\n        <input\n          disabled={this.state.disabled}\n          type={this.props.type}\n          name={this.props.name}\n          id={this.props.name}\n          defaultValue={this.props.defaultValue}\n        />\n        <button disabled={this.state.disabled} onClick={this.handleClick}>\n          🗸\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport Input from \"./components/Input/Input\";\nimport Button from \"./components/Button/Button\";\nimport \"./index.css\";\n\nclass Start extends React.Component {\n  state = {\n    start: false,\n    settings: false,\n    leaderboard: false,\n    winningScore: 100,\n    player1name: \"Player1\",\n    player2name: \"Player2\",\n  };\n\n  showButtons = () => {\n    return (\n      <div className=\"control\">\n        <Button\n          onClick={() =>\n            this.setState({ start: true, settings: false, leaderboard: false })\n          }\n          icon=\"game-controller\"\n          text=\"Start\"\n        />\n        <Button\n          onClick={() =>\n            this.setState({ start: false, settings: true, leaderboard: false })\n          }\n          icon=\"construct\"\n          text=\"Settings\"\n        />\n        <Button\n          onClick={() =>\n            this.setState({ start: false, settings: false, leaderboard: true })\n          }\n          icon=\"barbell-outline\"\n          text=\"Leaderboard\"\n        />\n      </div>\n    );\n  }\n\n  showLeaderboard = () => {\n    if (localStorage.getItem(\"winnings\") === null) {\n      return (\n        <div className=\"control\">\n          <h3>Sorry but I didn't found any winners yet.</h3>\n          <Button\n            onClick={() => this.setState({ leaderboard: false })}\n            icon=\"arrow-back-circle-sharp\"\n            text=\"Back\"\n          />\n        </div>\n      );\n    }\n    const winners = JSON.parse(localStorage.getItem(\"winnings\"));\n    winners.sort((a,b) => b.counter-a.counter);\n    return (\n      <div className=\"control\">\n        {winners.map((winner) => {\n          return (\n            <div>\n              <h4>{winner.name}</h4>\n              <span>Won {winner.counter} times</span>\n            </div>\n          );\n        })}\n        <Button\n          onClick={() => this.setState({ leaderboard: false })}\n          icon=\"arrow-back-circle-sharp\"\n          text=\"Back\"\n        />\n      </div>\n    );\n  }\n\n  showSettings = () => {\n    return (\n      <div className=\"control\">\n        <div className=\"line\">\n          <span>Winning Goal: </span>\n          <Input\n            type=\"number\"\n            name=\"winningscore\"\n            defaultValue={this.state.winningScore}\n            onClick={(value) => this.setState({ winningScore: value })}\n          />\n        </div>\n        <div className=\"line\">\n          <span>Player1 Name: </span>{\" \"}\n          <Input\n            name=\"player1name\"\n            defaultValue={this.state.player1name}\n            type=\"text\"\n            onClick={(value) => this.setState({ player1name: value })}\n          />\n        </div>\n        <div className=\"line\">\n          <span>Player2 Name: </span>{\" \"}\n          <Input\n            name=\"player2name\"\n            defaultValue={this.state.player2name}\n            type=\"text\"\n            onClick={(value) => this.setState({ player2name: value })}\n          />\n        </div>\n        <div className=\"line\">\n          <Button\n            onClick={() => this.setState({ settings: false })}\n            icon=\"arrow-back-circle-sharp\"\n            text=\"Back\"\n          />\n          <Button\n            onClick={() => localStorage.clear()}\n            icon=\"cloud-offline\"\n            text=\"Delete Local Storage\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    if (this.state.start) {\n      return <Game player1name={this.state.player1name} player2name={this.state.player2name} winningScore={this.state.winningScore} />;\n    }\n    return (\n      <div className=\"start-menu\">\n        <h1>\n          <ion-icon name=\"dice\"></ion-icon> Pig Dice Game\n        </h1>\n        {this.showButtons()}\n        {this.state.settings && this.showSettings()}\n        {this.state.leaderboard && this.showLeaderboard()}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <div>\n    <Start />\n  </div>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}